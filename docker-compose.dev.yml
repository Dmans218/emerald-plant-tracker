services:
  postgres:
    image: postgres:16-alpine
    container_name: emerald_postgres_dev
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=emerald_db
      - POSTGRES_USER=plant_user
      - POSTGRES_PASSWORD=securepassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U plant_user -d emerald_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: emerald_backend_dev
    ports:
      - "420:420"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=emerald_db
      - DB_USER=plant_user
      - DB_PASSWORD=securepassword
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: growlogger_frontend_dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:420
    restart: unless-stopped
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:
