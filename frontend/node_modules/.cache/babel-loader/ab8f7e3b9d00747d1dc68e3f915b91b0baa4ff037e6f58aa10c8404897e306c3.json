{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api`,\n  timeout: 10000\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'Something went wrong';\n  return Promise.reject(new Error(message));\n});\n\n// Plants API\nexport const plantsApi = {\n  getAll: () => api.get('/plants'),\n  getById: id => api.get(`/plants/${id}`),\n  create: data => api.post('/plants', data),\n  update: (id, data) => api.put(`/plants/${id}`, data),\n  delete: id => api.delete(`/plants/${id}`)\n};\n\n// Logs API\nexport const logsApi = {\n  getAll: params => api.get('/logs', {\n    params\n  }),\n  getById: id => api.get(`/logs/${id}`),\n  create: data => api.post('/logs', data),\n  delete: id => api.delete(`/logs/${id}`),\n  uploadPhoto: formData => api.post('/logs/photo', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  getStats: plantId => api.get(`/logs/stats/${plantId}`)\n};\n\n// Health check\nexport const healthApi = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","data","_error$response","_error$response$data","message","Error","plantsApi","getAll","get","getById","id","post","update","put","delete","logsApi","params","uploadPhoto","formData","headers","getStats","plantId","healthApi","check"],"sources":["/home/dmans218/projects/Growlogger/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api`,\n  timeout: 10000,\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    const message = error.response?.data?.error || error.message || 'Something went wrong';\n    return Promise.reject(new Error(message));\n  }\n);\n\n// Plants API\nexport const plantsApi = {\n  getAll: () => api.get('/plants'),\n  getById: (id) => api.get(`/plants/${id}`),\n  create: (data) => api.post('/plants', data),\n  update: (id, data) => api.put(`/plants/${id}`, data),\n  delete: (id) => api.delete(`/plants/${id}`),\n};\n\n// Logs API\nexport const logsApi = {\n  getAll: (params) => api.get('/logs', { params }),\n  getById: (id) => api.get(`/logs/${id}`),\n  create: (data) => api.post('/logs', data),\n  delete: (id) => api.delete(`/logs/${id}`),\n  uploadPhoto: (formData) => api.post('/logs/photo', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  }),\n  getStats: (plantId) => api.get(`/logs/stats/${plantId}`),\n};\n\n// Health check\nexport const healthApi = {\n  check: () => api.get('/health'),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGN,YAAY,MAAM;EAC9BO,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAR,GAAG,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAK;EACZ,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACAJ,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,oBAAA;EACT,MAAMC,OAAO,GAAG,EAAAF,eAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBN,KAAK,KAAIA,KAAK,CAACO,OAAO,IAAI,sBAAsB;EACtF,OAAON,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAACD,OAAO,CAAC,CAAC;AAC3C,CACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG;EACvBC,MAAM,EAAEA,CAAA,KAAMlB,GAAG,CAACmB,GAAG,CAAC,SAAS,CAAC;EAChCC,OAAO,EAAGC,EAAE,IAAKrB,GAAG,CAACmB,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;EACzCpB,MAAM,EAAGW,IAAI,IAAKZ,GAAG,CAACsB,IAAI,CAAC,SAAS,EAAEV,IAAI,CAAC;EAC3CW,MAAM,EAAEA,CAACF,EAAE,EAAET,IAAI,KAAKZ,GAAG,CAACwB,GAAG,CAAC,WAAWH,EAAE,EAAE,EAAET,IAAI,CAAC;EACpDa,MAAM,EAAGJ,EAAE,IAAKrB,GAAG,CAACyB,MAAM,CAAC,WAAWJ,EAAE,EAAE;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMK,OAAO,GAAG;EACrBR,MAAM,EAAGS,MAAM,IAAK3B,GAAG,CAACmB,GAAG,CAAC,OAAO,EAAE;IAAEQ;EAAO,CAAC,CAAC;EAChDP,OAAO,EAAGC,EAAE,IAAKrB,GAAG,CAACmB,GAAG,CAAC,SAASE,EAAE,EAAE,CAAC;EACvCpB,MAAM,EAAGW,IAAI,IAAKZ,GAAG,CAACsB,IAAI,CAAC,OAAO,EAAEV,IAAI,CAAC;EACzCa,MAAM,EAAGJ,EAAE,IAAKrB,GAAG,CAACyB,MAAM,CAAC,SAASJ,EAAE,EAAE,CAAC;EACzCO,WAAW,EAAGC,QAAQ,IAAK7B,GAAG,CAACsB,IAAI,CAAC,aAAa,EAAEO,QAAQ,EAAE;IAC3DC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACFC,QAAQ,EAAGC,OAAO,IAAKhC,GAAG,CAACmB,GAAG,CAAC,eAAea,OAAO,EAAE;AACzD,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,KAAK,EAAEA,CAAA,KAAMlC,GAAG,CAACmB,GAAG,CAAC,SAAS;AAChC,CAAC;AAED,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}